# Configuration

application.name=play-demo

akka.log-level = "WARN"

play.forms.binding.directFieldAccess = true

play.allowGlobalApplication = true

# Assets configuration
# ~~~~~
"assets.cache./public/stylesheets/bootstrap.min.css"="max-age=3600"
play.filters.disabled += "play.filters.csrf.CSRFFilter"
# turn on CSRFFilter if you need it, default is off
# play.filters.enabled += "play.filters.csrf.CSRFFilter"
# play.filters.csrf.header.bypassHeaders {
#   X-Requested-With = "*"
#   Csrf-Token = "nocheck"
# }
play.allowGlobalApplication = false
play.filters.cors.allowedOrigins = ["*"]
# Session configuration reference: https://www.playframework.com/documentation/2.8.x/SettingsSession
http.session = {

  # The cookie name
  cookieName = "PLAY_SESSION"

  # Whether the secure attribute of the cookie should be set to true
  secure = false

  # The max age to set on the cookie.
  # If null, the cookie expires when the user closes their browser.
  # An important thing to note, this only sets when the browser will discard the cookie.
  maxAge = null

  # Whether the HTTP only attribute of the cookie should be set to true
  httpOnly = true

  # The value of the SameSite attribute of the cookie. Set to null for no SameSite attribute.
  # Possible values are "lax" and "strict". If misconfigured it's set to null.
  sameSite = "lax"

  # The domain to set on the session cookie
  # If null, does not set a domain on the session cookie.
  domain = null

  # The session path
  # Must start with /.
  path = ${play.http.context}

  jwt {
    # The JWT signature algorithm to use on the session cookie
    # uses 'alg' https://tools.ietf.org/html/rfc7515#section-4.1.1
    signatureAlgorithm = "HS256"

    # The time after which the session is automatically invalidated.
    # Use 'exp' https://tools.ietf.org/html/rfc7519#section-4.1.4
    expiresAfter = ${play.http.session.maxAge}

    # The amount of clock skew to accept between servers when performing date checks
    # If you have NTP or roughtime synchronizing between servers, you can enhance
    # security by tightening this value.
    clockSkew = 5 minutes

    # The claim key under which all user data is stored in the JWT.
    dataClaim = "data"
  }
}


# System environment variables
# ~~~~~
# These variables can be used and updated based on the system used. Default values are added and can be updated to
# changed as required.
# System environment variables
# ~~~~~
# These variables can be used and updated based on the system used. Default values are added and can be updated to
# changed as required.
system {
  # Frontend server data
  frontend {
    # Protocol
    protocol = ${?OPENNEX_FRONT_END_PROTOCOL}
    protocol = "http"

    # The host name of the front-end server.
    # This can be set by adding OPENNEX_FRONT_END_HOST in the system
    # environment variable.

    host = ${?OPENNEX_FRONT_END_HOST}
    host = "localhost"
    # The port of the front-end server. This can be set by adding the
    # OPENNEX_FRONT_END_PORT in the system environment variable.
    # port = 9001
    port = ${?OPENNEX_FRONT_END_PORT}
    port = 9001
    # The internal host and port of the front-end server. This will allow
    # separate configurations for the server-side RESTful calls.

    rest-protocol = ${?OPENNEX_FRONT_END_REST_PROTOCOL}
    rest-protocol = "http"

    rest-host = ${?OPENNEX_FRONT_END_REST_HOST}
    rest-host = "localhost"

    rest-port = ${?OPENNEX_FRONT_END_REST_PORT}
    rest-port = "9001"
  }

  # Backend server data
  backend {
    # Protocol

    protocol = ${?OPENNEX_BACK_END_PROTOCOL}
    protocol = "http"
    # The host name of the back-end server.
    # This can be set by adding OPENNEX_BACK_END_HOST in the system
    # environment variable.

    host = ${?OPENNEX_BACK_END_HOST}
    host = "localhost"
    # The port of the back-end server. This can be set by adding the
    # OPENNEX_BACK_END_PORT in the system environment variable.

    port = ${?OPENNEX_BACK_END_PORT}
    port = 9005
    # The internal host and port of the back-end server. This will allow
    # separate configurations for the server-side RESTful calls.

    rest-protocol = ${?OPENNEX_BACK_END_REST_PROTOCOL}
    rest-protocol = "http"

    rest-host = ${?OPENNEX_BACK_END_REST_HOST}
    rest-host = "localhost"

    rest-port = ${?OPENNEX_BACK_END_REST_PORT}
    rest-port = 9005
  }
}

